'use strict';

// Register `dashboard` component along with its controller and templates
angular
    .module('dashboard')
    .component('dashboard', {
        templateUrl: 'app/components/dashboard/dashboard.template.php',
        controller: 'DashboardController'
    })
    // Dashboard controller
    .controller('DashboardController', ['$scope', '$http', '$interval', '$timeout', '$location', '$window', 'CONFIG', function ($scope, $http, $interval, $timeout, $location, $window, CONFIG) {

        var socket;
        var params = $location.search();
        $scope.game_id = params.game_id ? params.game_id : $window.localStorage.getItem('game_id');
        $scope.game = JSON.parse($window.localStorage.getItem('game'));
        $scope.my_team = JSON.parse($window.localStorage.getItem('my_team'));
        $scope.user = JSON.parse($window.localStorage.getItem('user'));

        if ($scope.my_team) {
            $http({
                method: 'POST',
                url: CONFIG.API_URL + '/teams/' + $scope.my_team.id + '/join/',
                data: {
                    'user_id': $scope.user.id,
                    'game_id': $scope.game_id,
                },
                headers: { 'Content-Type': 'application/json' }
            }).success(function (data, status, headers, config) {
                $location.path('/game-round');
            }).error(function (data, status, headers, config) {
                $scope.errors = data;
                $scope.disableBtn = false;
            });
        }

        var fetchGameData = function(game_id) {
            $http.get(CONFIG.API_URL + '/games/' + game_id + '/result/')
                .success(function(data){
                    $scope.game = data;
                })
                .error(function(data) {
                    $scope.errors = "error in fetching data";
                });
        }
        fetchGameData($scope.game_id);

        socket = new WebSocket(CONFIG.WS_URL + '/wsgame' + $scope.game_id);
        socket.onmessage = function(e) {
            var response = JSON.parse(e.data);
            if (response.update_teams) {
                fetchGameData($scope.game_id);
            }
        }
        socket.onopen = function() {
            // socket.send("hello world");
        }
        // Call onopen directly if socket is already open
        if (socket.readyState == WebSocket.OPEN) socket.onopen();
    }])
    .filter('secondsToDate', [
        function () {
            return function (seconds) {
                return new Date(1970, 0, 1).setSeconds(seconds);
            };
        }
    ])
